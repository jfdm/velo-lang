@article{10.1145/3563355,
  author =       {van der Rest, Cas and Poulsen, Casper Bach and
                  Rouvoet, Arjen and Visser, Eelco and Mosses, Peter},
  title =        {Intrinsically-Typed Definitional Interpreters \`{a}
                  La Carte},
  year =         {2022},
  issue_date =   {October 2022},
  publisher =    {Association for Computing Machinery},
  address =      {New York, NY, USA},
  volume =       {6},
  number =       {OOPSLA2},
  url =          {https://doi.org/10.1145/3563355},
  doi =          {10.1145/3563355},
  abstract =     {Specifying and mechanically verifying type safe
                  programming languages requires significant
                  effort. This effort can in theory be reduced by
                  defining and reusing pre-verified, modular
                  components. In practice, however, existing
                  approaches to modular mechanical verification
                  require many times as much specification code as
                  plain, monolithic definitions. This makes it hard to
                  develop new reusable components, and makes existing
                  component specifications hard to grasp. We present
                  an alternative approach based on intrinsically-typed
                  interpreters, which reduces the size and complexity
                  of modular specifications as compared to existing
                  approaches. Furthermore, we introduce a new
                  abstraction for safe-by-construction specification
                  and composition of pre-verified type safe language
                  components: language fragments. Language fragments
                  are about as concise and easy to develop as plain,
                  monolithic intrinsically-typed interpreters, but
                  require about 10 times less code than previous
                  approaches to modular mechanical verification of
                  type safety.},
  journal =      {Proc. ACM Program. Lang.},
  month =        {oct},
  articleno =    {192},
  numpages =     {30},
  keywords =     {Dependently Typed Programming, Modularity, Reuse,
                  Definitional Interpreters, Type Safety}
}

@inproceedings{DBLP:conf/icfp/ClaessenH00,
  author    = {Koen Claessen and
               John Hughes},
  editor    = {Martin Odersky and
               Philip Wadler},
  title     = {QuickCheck: a lightweight tool for random testing of Haskell programs},
  booktitle = {Proceedings of the Fifth {ACM} {SIGPLAN} International Conference
               on Functional Programming {(ICFP} '00), Montreal, Canada, September
               18-21, 2000},
  pages     = {268--279},
  publisher = {{ACM}},
  year      = {2000},
  url       = {https://doi.org/10.1145/351240.351266},
  doi       = {10.1145/351240.351266},
  timestamp = {Wed, 02 Mar 2022 21:39:33 +0100},
  biburl    = {https://dblp.org/rec/conf/icfp/ClaessenH00.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/birthday/McBride16,
  author    = {Conor McBride},
  editor    = {Sam Lindley and
               Conor McBride and
               Philip W. Trinder and
               Donald Sannella},
  title     = {I Got Plenty o' Nuttin'},
  booktitle = {A List of Successes That Can Change the World - Essays Dedicated to
               Philip Wadler on the Occasion of His 60th Birthday},
  series    = {Lecture Notes in Computer Science},
  volume    = {9600},
  pages     = {207--233},
  publisher = {Springer},
  year      = {2016},
  url       = {https://doi.org/10.1007/978-3-319-30936-1\_12},
  doi       = {10.1007/978-3-319-30936-1\_12},
  timestamp = {Tue, 14 May 2019 10:00:52 +0200},
  biburl    = {https://dblp.org/rec/conf/birthday/McBride16.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/lics/Atkey18,
  author    = {Robert Atkey},
  editor    = {Anuj Dawar and
               Erich Gr{\"{a}}del},
  title     = {Syntax and Semantics of Quantitative Type Theory},
  booktitle = {Proceedings of the 33rd Annual {ACM/IEEE} Symposium on Logic in Computer
               Science, {LICS} 2018, Oxford, UK, July 09-12, 2018},
  pages     = {56--65},
  publisher = {{ACM}},
  year      = {2018},
  url       = {https://doi.org/10.1145/3209108.3209189},
  doi       = {10.1145/3209108.3209189},
  timestamp = {Wed, 21 Nov 2018 12:44:18 +0100},
  biburl    = {https://dblp.org/rec/conf/lics/Atkey18.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@Article{DBLP:journals/toplas/IgarashiPW01,
  author =       {Atsushi Igarashi and Benjamin C. Pierce and Philip
                  Wadler},
  title =        {Featherweight Java: a minimal core calculus for Java
                  and {GJ}},
  year =         2001,
  volume =       23,
  number =       3,
  pages =        {396-450},
  doi =          {10.1145/503502.503505},
  url =          {https://doi.org/10.1145/503502.503505},
  journal =      {{ACM} Trans. Program. Lang. Syst.},
  timestamp =    {Tue, 06 Nov 2018 12:51:29 +0100},
  biburl =
                  {https://dblp.org/rec/journals/toplas/IgarashiPW01.bib},
  bibsource =    {dblp computer science bibliography,
                  https://dblp.org}
}

@InProceedings{DBLP:conf/icfp/Brady13,
  author       = {Edwin C. Brady},
  title        = {Programming and reasoning with algebraic effects and
                  dependent types},
  year         = 2013,
  booktitle    = {{ACM} {SIGPLAN} International Conference on
                  Functional Programming, ICFP'13, Boston, MA, {USA} -
                  September 25 - 27, 2013},
  pages        = {133-144},
  doi          = {10.1145/2500365.2500581},
  url          = {https://doi.org/10.1145/2500365.2500581},
  crossref     = {DBLP:conf/icfp/2013},
  timestamp    = {Thu, 24 Jun 2021 16:19:30 +0200},
  biburl       = {https://dblp.org/rec/conf/icfp/Brady13.bib},
  bibsource    = {dblp computer science bibliography,
                  https://dblp.org}
}

@proceedings{DBLP:conf/icfp/2013,
  editor    = {Greg Morrisett and
               Tarmo Uustalu},
  title     = {{ACM} {SIGPLAN} International Conference on Functional Programming,
               ICFP'13, Boston, MA, {USA} - September 25 - 27, 2013},
  publisher = {{ACM}},
  year      = {2013},
  url       = {https://doi.org/10.1145/2500365},
  doi       = {10.1145/2500365},
  isbn      = {978-1-4503-2326-0},
  timestamp = {Fri, 28 Oct 2022 14:38:13 +0200},
  biburl    = {https://dblp.org/rec/conf/icfp/2013.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@Book{brady17:_type_driven_devel_idris,
  author =    {Edwin C. Brady},
  title =        {Type-Driven Development with Idris},
  publisher =    {Manning Publications},
  year =         2017,
  isbn =         9781617293023}

@article{MANUAL:draft/Allais22,
  author    = {Guillaume Allais},
  title     = {Builtin Types viewed as Inductive Families},
  journal   = {CoRR},
  volume    = {abs/2301.02194},
  year      = {2023},
  url       = {https://doi.org/10.48550/arXiv.2301.02194},
  doi       = {10.48550/arXiv.2301.02194},
  eprinttype = {arXiv},
  eprint    = {2301.02194},
  timestamp = {Tue, 10 Jan 2023 15:10:12 +0100},
  biburl    = {https://dblp.org/rec/journals/corr/abs-2301-02194.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{MANUAL:dtp/Christiansen2014,
  author =       {David Raymond Christiansen \and Hannes Mehnert},
  title =        {Tool Demonstration: An {IDE} for Programming and
                  Proving in Idris},
  booktitle = {Proceedings of {DTP 2014}},
  year =      2014
}

@Article{DBLP:journals/iandc/WrightF94,
  author       = {Andrew K. Wright and Matthias Felleisen},
  title        = {A Syntactic Approach to Type Soundness},
  year         = 1994,
  volume       = 115,
  number       = 1,
  pages        = {38-94},
  doi          = {10.1006/inco.1994.1093},
  url          = {https://doi.org/10.1006/inco.1994.1093},
  journal      = {Inf. Comput.},
  timestamp    = {Fri, 12 Feb 2021 22:15:30 +0100},
  biburl       = {https://dblp.org/rec/journals/iandc/WrightF94.bib},
  bibsource    = {dblp computer science bibliography,
                  https://dblp.org}
}

@Article{DBLP:journals/pacmpl/LampropoulosPP18,
  author       = {Leonidas Lampropoulos and Zoe Paraskevopoulou and
                  Benjamin C. Pierce},
  title        = {Generating good generators for inductive relations},
  year         = 2018,
  volume       = 2,
  number       = {{POPL}},
  pages        = {45:1--45:30},
  doi          = {10.1145/3158133},
  url          = {https://doi.org/10.1145/3158133},
  journal      = {Proc. {ACM} Program. Lang.},
  timestamp    = {Wed, 17 Feb 2021 08:53:57 +0100},
  biburl       =
                  {https://dblp.org/rec/journals/pacmpl/LampropoulosPP18.bib},
  bibsource    = {dblp computer science bibliography,
                  https://dblp.org}
}

@Inproceedings{Augustsson1999edt,
  title =        {{An Exercise in Dependent Types: A Well-Typed
                  Interpreter}},
  author =       {Lennart Augustsson and Magnus Carlsson},
  booktitle =    {Workshop on Dependent Types in Programming,
                  Gothenburg},
  year =         1999
}
@Article{DBLP:journals/pacmpl/OmarVCH19,
  author       = {Cyrus Omar and Ian Voysey and Ravi Chugh and Matthew
                  A. Hammer},
  title        = {Live functional programming with typed holes},
  year         = 2019,
  volume       = 3,
  number       = {{POPL}},
  pages        = {14:1--14:32},
  doi          = {10.1145/3290327},
  url          = {https://doi.org/10.1145/3290327},
  journal      = {Proc. {ACM} Program. Lang.},
  timestamp    = {Wed, 17 Feb 2021 08:54:01 +0100},
  biburl       = {https://dblp.org/rec/journals/pacmpl/OmarVCH19.bib},
  bibsource    = {dblp computer science bibliography,
                  https://dblp.org}
}




@article{DBLP:journals/jfp/AbelAHPMSS19,
  author    = {Andreas Abel and
               Guillaume Allais and
               Aliya Hameer and
               Brigitte Pientka and
               Alberto Momigliano and
               Steven Sch{\"{a}}fer and
               Kathrin Stark},
  title     = {{POPLMark} reloaded: Mechanizing proofs by logical relations},
  journal   = {J. Funct. Program.},
  volume    = {29},
  pages     = {e19},
  year      = {2019},
  url       = {https://doi.org/10.1017/S0956796819000170},
  doi       = {10.1017/S0956796819000170},
  timestamp = {Tue, 16 Jun 2020 17:16:55 +0200},
  biburl    = {https://dblp.org/rec/journals/jfp/AbelAHPMSS19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{DBLP:conf/tphol/AydemirBFFPSVWWZ05,
  author    = {Brian E. Aydemir and
               Aaron Bohannon and
               Matthew Fairbairn and
               J. Nathan Foster and
               Benjamin C. Pierce and
               Peter Sewell and
               Dimitrios Vytiniotis and
               Geoffrey Washburn and
               Stephanie Weirich and
               Steve Zdancewic},
  editor    = {Joe Hurd and
               Thomas F. Melham},
  title     = {Mechanized Metatheory for the Masses: The {PoplMark} Challenge},
  booktitle = {Theorem Proving in Higher Order Logics, 18th International Conference,
               TPHOLs 2005, Oxford, UK, August 22-25, 2005, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {3603},
  pages     = {50--65},
  publisher = {Springer},
  year      = {2005},
  url       = {https://doi.org/10.1007/11541868\_4},
  doi       = {10.1007/11541868\_4},
  timestamp = {Tue, 14 May 2019 10:00:48 +0200},
  biburl    = {https://dblp.org/rec/conf/tphol/AydemirBFFPSVWWZ05.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/jfp/AllaisACMM21,
  author    = {Guillaume Allais and
               Robert Atkey and
               James Chapman and
               Conor McBride and
               James McKinna},
  title     = {A type- and scope-safe universe of syntaxes with binding: their semantics
               and proofs},
  journal   = {J. Funct. Program.},
  volume    = {31},
  pages     = {e22},
  year      = {2021},
  url       = {https://doi.org/10.1017/S0956796820000076},
  doi       = {10.1017/S0956796820000076},
  timestamp = {Fri, 21 Jan 2022 22:01:15 +0100},
  biburl    = {https://dblp.org/rec/journals/jfp/AllaisACMM21.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/cpp/StarkSK19,
  author    = {Kathrin Stark and
               Steven Sch{\"{a}}fer and
               Jonas Kaiser},
  editor    = {Assia Mahboubi and
               Magnus O. Myreen},
  title     = {Autosubst 2: reasoning with multi-sorted de Bruijn terms and vector
               substitutions},
  booktitle = {Proceedings of the 8th {ACM} {SIGPLAN} International Conference on
               Certified Programs and Proofs, {CPP} 2019, Cascais, Portugal, January
               14-15, 2019},
  pages     = {166--180},
  publisher = {{ACM}},
  year      = {2019},
  url       = {https://doi.org/10.1145/3293880.3294101},
  doi       = {10.1145/3293880.3294101},
  timestamp = {Fri, 04 Jan 2019 10:46:45 +0100},
  biburl    = {https://dblp.org/rec/conf/cpp/StarkSK19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@software{the_coq_development_team_2022_5846982,
  author       = {The Coq Development Team},
  title        = {The Coq Proof Assistant},
  month        = jan,
  year         = 2022,
  publisher    = {Zenodo},
  version      = {8.15},
  doi          = {10.5281/zenodo.5846982},
  url          = {https://doi.org/10.5281/zenodo.5846982}
}
%TODO
@inproceedings{10.1145/3009837.3009866,
author = {Amin, Nada and Rompf, Tiark},
title = {Type Soundness Proofs with Definitional Interpreters},
year = {2017},
isbn = {9781450346603},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3009837.3009866},
doi = {10.1145/3009837.3009866},
abstract = {While type soundness proofs are taught in every graduate PL class, the gap between realistic languages and what is accessible to formal proofs is large. In the case of Scala, it has been shown that its formal model, the Dependent Object Types (DOT) calculus, cannot simultaneously support key metatheoretic properties such as environment narrowing and subtyping transitivity, which are usually required for a type soundness proof. Moreover, Scala and many other realistic languages lack a general substitution property. The first contribution of this paper is to demonstrate how type soundness proofs for advanced, polymorphic, type systems can be carried out with an operational semantics based on high-level, definitional interpreters, implemented in Coq. We present the first mechanized soundness proofs in this style for System F and several extensions, including mutable references. Our proofs use only straightforward induction, which is significant, as the combination of big-step semantics, mutable references, and polymorphism is commonly believed to require coinductive proof techniques. The second main contribution of this paper is to show how DOT-like calculi emerge from straightforward generalizations of the operational aspects of F, exposing a rich design space of calculi with path-dependent types inbetween System F and DOT, which we dub the System D Square. By working directly on the target language, definitional interpreters can focus the design space and expose the invariants that actually matter at runtime. Looking at such runtime invariants is an exciting new avenue for type system design.},
booktitle = {Proceedings of the 44th ACM SIGPLAN Symposium on Principles of Programming Languages},
pages = {666–679},
numpages = {14},
keywords = {Definitional interpreters, Scala, type soundness, dependent object types, DOT},
location = {Paris, France},
series = {POPL '17}
}

@article{10.1145/3093333.3009866,
author = {Amin, Nada and Rompf, Tiark},
title = {Type Soundness Proofs with Definitional Interpreters},
year = {2017},
issue_date = {January 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {1},
issn = {0362-1340},
url = {https://doi.org/10.1145/3093333.3009866},
doi = {10.1145/3093333.3009866},
abstract = {While type soundness proofs are taught in every graduate PL class, the gap between realistic languages and what is accessible to formal proofs is large. In the case of Scala, it has been shown that its formal model, the Dependent Object Types (DOT) calculus, cannot simultaneously support key metatheoretic properties such as environment narrowing and subtyping transitivity, which are usually required for a type soundness proof. Moreover, Scala and many other realistic languages lack a general substitution property. The first contribution of this paper is to demonstrate how type soundness proofs for advanced, polymorphic, type systems can be carried out with an operational semantics based on high-level, definitional interpreters, implemented in Coq. We present the first mechanized soundness proofs in this style for System F and several extensions, including mutable references. Our proofs use only straightforward induction, which is significant, as the combination of big-step semantics, mutable references, and polymorphism is commonly believed to require coinductive proof techniques. The second main contribution of this paper is to show how DOT-like calculi emerge from straightforward generalizations of the operational aspects of F, exposing a rich design space of calculi with path-dependent types inbetween System F and DOT, which we dub the System D Square. By working directly on the target language, definitional interpreters can focus the design space and expose the invariants that actually matter at runtime. Looking at such runtime invariants is an exciting new avenue for type system design.},
journal = {SIGPLAN Not.},
month = {jan},
pages = {666–679},
numpages = {14},
keywords = {type soundness, DOT, Scala, dependent object types, Definitional interpreters}
}


@inproceedings{DBLP:conf/sle/ErdwegSVBBCGHKLKMPPSSSVVVWW13,
  author    = {Sebastian Erdweg and
               Tijs van der Storm and
               Markus V{\"{o}}lter and
               Meinte Boersma and
               Remi Bosman and
               William R. Cook and
               Albert Gerritsen and
               Angelo Hulshout and
               Steven Kelly and
               Alex Loh and
               Gabri{\"{e}}l D. P. Konat and
               Pedro J. Molina and
               Martin Palatnik and
               Risto Pohjonen and
               Eugen Schindler and
               Klemens Schindler and
               Riccardo Solmi and
               Vlad A. Vergu and
               Eelco Visser and
               Kevin van der Vlist and
               Guido Wachsmuth and
               Jimi van der Woning},
  editor    = {Martin Erwig and
               Richard F. Paige and
               Eric Van Wyk},
  title     = {The State of the Art in Language Workbenches - Conclusions from the
               Language Workbench Challenge},
  booktitle = {Software Language Engineering - 6th International Conference, {SLE}
               2013, Indianapolis, IN, USA, October 26-28, 2013. Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {8225},
  pages     = {197--217},
  publisher = {Springer},
  year      = {2013},
  url       = {https://doi.org/10.1007/978-3-319-02654-1\_11},
  doi       = {10.1007/978-3-319-02654-1\_11},
  timestamp = {Sun, 02 Oct 2022 16:15:33 +0200},
  biburl    = {https://dblp.org/rec/conf/sle/ErdwegSVBBCGHKLKMPPSSSVVVWW13.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:journals/corr/abs-1807-04085,
  author    = {Conor McBride},
  editor    = {Robert Atkey and
               Sam Lindley},
  title     = {Everybody's Got To Be Somewhere},
  booktitle = {Proceedings of the 7th Workshop on Mathematically Structured Functional
               Programming, MSFP@FSCD 2018, Oxford, UK, 8th July 2018},
  series    = {{EPTCS}},
  volume    = {275},
  pages     = {53--69},
  year      = {2018},
  url       = {https://doi.org/10.4204/EPTCS.275.6},
  doi       = {10.4204/EPTCS.275.6},
  timestamp = {Mon, 10 Sep 2018 16:20:34 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1807-04085.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/jfp/McBrideM04,
  author    = {Conor McBride and
               James McKinna},
  title     = {The view from the left},
  journal   = {J. Funct. Program.},
  volume    = {14},
  number    = {1},
  pages     = {69--111},
  year      = {2004},
  url       = {https://doi.org/10.1017/S0956796803004829},
  doi       = {10.1017/S0956796803004829},
  timestamp = {Wed, 14 Nov 2018 10:38:39 +0100},
  biburl    = {https://dblp.org/rec/journals/jfp/McBrideM04.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/mpc/HuttonW04,
  author    = {Graham Hutton and
               Joel J. Wright},
  editor    = {Dexter Kozen and
               Carron Shankland},
  title     = {Compiling Exceptions Correctly},
  booktitle = {Mathematics of Program Construction, 7th International Conference,
               {MPC} 2004, Stirling, Scotland, UK, July 12-14, 2004, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {3125},
  pages     = {211--227},
  publisher = {Springer},
  year      = {2004},
  url       = {https://doi.org/10.1007/978-3-540-27764-4\_12},
  doi       = {10.1007/978-3-540-27764-4\_12},
  timestamp = {Tue, 14 May 2019 10:00:46 +0200},
  biburl    = {https://dblp.org/rec/conf/mpc/HuttonW04.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@article{hudak1996building,
  title={Building domain-specific embedded languages},
  author={Hudak, Paul},
  journal={ACM Computing Surveys (CSUR)},
  volume={28},
  number={4es},
  pages={196},
  year={1996},
  publisher={ACM}
}

@inproceedings{DBLP:conf/icfp/ChristiansenB16,
  author    = {David R. Christiansen and
               Edwin C. Brady},
  editor    = {Jacques Garrigue and
               Gabriele Keller and
               Eijiro Sumii},
  title     = {Elaborator reflection: extending Idris in Idris},
  booktitle = {Proceedings of the 21st {ACM} {SIGPLAN} International Conference on
               Functional Programming, {ICFP} 2016, Nara, Japan, September 18-22,
               2016},
  pages     = {284--297},
  publisher = {{ACM}},
  year      = {2016},
  url       = {https://doi.org/10.1145/2951913.2951932},
  doi       = {10.1145/2951913.2951932},
  timestamp = {Wed, 23 Jun 2021 15:34:31 +0200},
  biburl    = {https://dblp.org/rec/conf/icfp/ChristiansenB16.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{MANUAL:journals/math/debruijn72,
  author =       {de Bruijn, Nicolaas Govert},
  title =        {Lambda calculus notation with nameless dummies, a
                  tool for automatic formula manipulation, with
                  application to the {C}hurch-{R}osser theorem},
  journal =      {Indagationes Mathematicae (Proceedings)},
  volume =       75,
  number =       5,
  pages =        {381-392},
  year =         1972,
  issn =         {1385-7258},
  doi =          {10.1016/1385-7258(72)90034-0},
}

@article{DBLP:journals/fac/Dybjer94,
  author    = {Peter Dybjer},
  title     = {Inductive Families},
  journal   = {Formal Aspects Comput.},
  volume    = {6},
  number    = {4},
  pages     = {440--465},
  year      = {1994},
  url       = {https://doi.org/10.1007/BF01211308},
  doi       = {10.1007/BF01211308},
  timestamp = {Mon, 09 May 2022 16:20:12 +0200},
  biburl    = {https://dblp.org/rec/journals/fac/Dybjer94.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@Unpublished{msfp/Atkey22,
  author =       {Robert Atkey},
  year = 2022,
  title =        {Data Types with Negation},
  note =         {Extended Abstract (Talk Only) at {\rm Ninth Workshop on}
               Mathematically Structured Functional Programming,
               {\rm Munich, Germany, 2nd April 2022}},
  url={https://youtu.be/mZZjOKWCF4A}

}

@InProceedings{DBLP:conf/ecoop/Brady21,
  author       = {Edwin C. Brady},
  title        = {Idris 2: Quantitative Type Theory in Practice},
  year         = 2021,
  booktitle    = {35th European Conference on Object-Oriented
                  Programming, {ECOOP} 2021, July 11-17, 2021, Aarhus,
                  Denmark (Virtual Conference)},
  pages        = {9:1--9:26},
  doi          = {10.4230/LIPIcs.ECOOP.2021.9},
  url          = {https://doi.org/10.4230/LIPIcs.ECOOP.2021.9},
  crossref     = {DBLP:conf/ecoop/2021},
  timestamp    = {Sun, 25 Jul 2021 11:47:10 +0200},
  biburl       = {https://dblp.org/rec/conf/ecoop/Brady21.bib},
  bibsource    = {dblp computer science bibliography,
                  https://dblp.org}
}

@proceedings{DBLP:conf/ecoop/2021,
  editor    = {Anders M{\o}ller and
               Manu Sridharan},
  title     = {35th European Conference on Object-Oriented Programming, {ECOOP} 2021,
               July 11-17, 2021, Aarhus, Denmark (Virtual Conference)},
  series    = {LIPIcs},
  volume    = {194},
  publisher = {Schloss Dagstuhl - Leibniz-Zentrum f{\"{u}}r Informatik},
  year      = {2021},
  url       = {https://www.dagstuhl.de/dagpub/978-3-95977-190-0},
  isbn      = {978-3-95977-190-0},
  timestamp = {Mon, 03 Oct 2022 15:09:44 +0200},
  biburl    = {https://dblp.org/rec/conf/ecoop/2021.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@Book{plfa22.08,
    author = {Philip Wadler and Wen Kokke and Jeremy G. Siek},
    title  = {Programming Language Foundations in {A}gda},
    year   = {2022},
    month  = aug,
    url    = {https://plfa.inf.ed.ac.uk/22.08/},
}

@book {Pierce:SF2,
  author =       {Benjamin C. Pierce and Arthur Azevedo de Amorim and
                  Chris Casinghino and Marco Gaboardi and Michael
                  Greenberg and C{\v{a}}t{\v{a}}lin Hri{\c{t}}cu and Vilhelm Sj{\"o}berg and
                  Andrew Tolmach and Brent Yorgey},
  title =        "Programming Language Foundations",
  series =       "Software Foundations",
  volume =       "2",
  year =         "2020",
  publisher =    "Electronic textbook",
  note =         {Version 5.8,
                  \url{http://softwarefoundations.cis.upenn.edu} }
}
@Book{DBLP:books/daglib/0005958,
  author       = {Benjamin C. Pierce},
  title        = {Types and programming languages},
  year         = 2002,
  publisher    = {{MIT} Press},
  isbn         = {978-0-262-16209-8},
  timestamp    = {Thu, 03 Feb 2011 10:51:35 +0100},
  biburl       = {https://dblp.org/rec/books/daglib/0005958.bib},
  bibsource    = {dblp computer science bibliography,
                  https://dblp.org}
}
@InProceedings{DBLP:conf/afp/Norell08,
  author       = {Ulf Norell},
  title        = {Dependently Typed Programming in {A}gda},
  year         = 2008,
  booktitle    = {Advanced Functional Programming, 6th International
                  School, {AFP} 2008, Heijen, The Netherlands, May
                  2008, Revised Lectures},
  pages        = {230-266},
  doi          = {10.1007/978-3-642-04652-0\_5},
  url          = {https://doi.org/10.1007/978-3-642-04652-0\_5},
  crossref     = {DBLP:conf/afp/2008},
  timestamp    = {Tue, 14 May 2019 10:00:44 +0200},
  biburl       = {https://dblp.org/rec/conf/afp/Norell08.bib},
  bibsource    = {dblp computer science bibliography,
                  https://dblp.org}
}

@proceedings{DBLP:conf/afp/2008,
  editor    = {Pieter W. M. Koopman and
               Rinus Plasmeijer and
               S. Doaitse Swierstra},
  title     = {Advanced Functional Programming, 6th International School, {AFP} 2008,
               Heijen, The Netherlands, May 2008, Revised Lectures},
  series    = {Lecture Notes in Computer Science},
  volume    = {5832},
  publisher = {Springer},
  year      = {2009},
  url       = {https://doi.org/10.1007/978-3-642-04652-0},
  doi       = {10.1007/978-3-642-04652-0},
  isbn      = {978-3-642-04651-3},
  timestamp = {Sun, 23 Oct 2022 21:24:24 +0200},
  biburl    = {https://dblp.org/rec/conf/afp/2008.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{DBLP:conf/mpc/ChapmanKNW19,
  author    = {James Chapman and
               Roman Kireev and
               Chad Nester and
               Philip Wadler},
  editor    = {Graham Hutton},
  title     = {System {F} in {A}gda, for Fun and Profit},
  booktitle = {Mathematics of Program Construction - 13th International Conference,
               {MPC} 2019, Porto, Portugal, October 7-9, 2019, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {11825},
  pages     = {255--297},
  publisher = {Springer},
  year      = {2019},
  url       = {https://doi.org/10.1007/978-3-030-33636-3\_10},
  doi       = {10.1007/978-3-030-33636-3\_10},
  timestamp = {Sat, 18 Apr 2020 17:56:43 +0200},
  biburl    = {https://dblp.org/rec/conf/mpc/ChapmanKNW19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@Article{DBLP:journals/entcs/DolstraV02,
  author       = {Eelco Dolstra and Eelco Visser},
  title        = {Building Interpreters with Rewriting Strategies},
  year         = 2002,
  volume       = 65,
  number       = 3,
  pages        = {57-76},
  doi          = {10.1016/S1571-0661(04)80427-4},
  url          = {https://doi.org/10.1016/S1571-0661(04)80427-4},
  journal      = {Electron. Notes Theor. Comput. Sci.},
  timestamp    = {Fri, 12 Feb 2021 22:18:43 +0100},
  biburl       = {https://dblp.org/rec/journals/entcs/DolstraV02.bib},
  bibsource    = {dblp computer science bibliography,
                  https://dblp.org}
}

@Article{DBLP:journals/pacmpl/RouvoetKV21,
  author       = {Arjen Rouvoet and Robbert Krebbers and Eelco Visser},
  title        = {Intrinsically typed compilation with nameless
                  labels},
  year         = 2021,
  volume       = 5,
  number       = {{POPL}},
  pages        = {1-28},
  doi          = {10.1145/3434303},
  url          = {https://doi.org/10.1145/3434303},
  journal      = {Proc. {ACM} Program. Lang.},
  timestamp    = {Wed, 17 Feb 2021 08:54:05 +0100},
  biburl       =
                  {https://dblp.org/rec/journals/pacmpl/RouvoetKV21.bib},
  bibsource    = {dblp computer science bibliography,
                  https://dblp.org}
}

@InProceedings{DBLP:conf/cpp/RouvoetPKV20,
  author       = {Arjen Rouvoet and Casper Bach Poulsen and Robbert
                  Krebbers and Eelco Visser},
  title        = {Intrinsically-typed definitional interpreters for
                  linear, session-typed languages},
  year         = 2020,
  booktitle    = {Proceedings of the 9th {ACM} {SIGPLAN} International
                  Conference on Certified Programs and Proofs, {CPP}
                  2020, New Orleans, LA, USA, January 20-21, 2020},
  pages        = {284-298},
  doi          = {10.1145/3372885.3373818},
  url          = {https://doi.org/10.1145/3372885.3373818},
  crossref     = {DBLP:conf/cpp/2020},
  timestamp    = {Thu, 23 Jan 2020 16:12:31 +0100},
  biburl       = {https://dblp.org/rec/conf/cpp/RouvoetPKV20.bib},
  bibsource    = {dblp computer science bibliography,
                  https://dblp.org}
}

@proceedings{DBLP:conf/cpp/2020,
  editor    = {Jasmin Blanchette and
               Catalin Hritcu},
  title     = {Proceedings of the 9th {ACM} {SIGPLAN} International Conference on
               Certified Programs and Proofs, {CPP} 2020, New Orleans, LA, USA, January
               20-21, 2020},
  publisher = {{ACM}},
  year      = {2020},
  url       = {https://doi.org/10.1145/3372885},
  doi       = {10.1145/3372885},
  isbn      = {978-1-4503-7097-4},
  timestamp = {Thu, 29 Sep 2022 13:28:35 +0200},
  biburl    = {https://dblp.org/rec/conf/cpp/2020.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{DBLP:conf/oopsla/MensingAPV19,
  author       = {Adrian D. Mensing and Hendrik van Antwerpen and
                  Casper Bach Poulsen and Eelco Visser},
  title        = {From definitional interpreter to symbolic executor},
  year         = 2019,
  booktitle    = {Proceedings of the 4th {ACM} {SIGPLAN} International
                  Workshop on Meta-Programming Techniques and
                  Reflection, META@SPLASH 2019, Athens, Greece,
                  October 20, 2019},
  pages        = {11-20},
  doi          = {10.1145/3358502.3361269},
  url          = {https://doi.org/10.1145/3358502.3361269},
  crossref     = {DBLP:conf/oopsla/2019meta},
  timestamp    = {Mon, 12 Jul 2021 15:34:15 +0200},
  biburl       = {https://dblp.org/rec/conf/oopsla/MensingAPV19.bib},
  bibsource    = {dblp computer science bibliography,
                  https://dblp.org}
}

@proceedings{DBLP:conf/oopsla/2019meta,
  editor    = {Christophe Scholliers and
               Guido Chari},
  title     = {Proceedings of the 4th {ACM} {SIGPLAN} International Workshop on Meta-Programming
               Techniques and Reflection, META@SPLASH 2019, Athens, Greece, October
               20, 2019},
  publisher = {{ACM}},
  year      = {2019},
  url       = {https://doi.org/10.1145/3358502},
  doi       = {10.1145/3358502},
  isbn      = {978-1-4503-6985-5},
  timestamp = {Thu, 29 Sep 2022 13:28:57 +0200},
  biburl    = {https://dblp.org/rec/conf/oopsla/2019meta.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@article{DBLP:journals/software/WachsmuthKV14,
  author    = {Guido Wachsmuth and
               Gabri{\"{e}}l D. P. Konat and
               Eelco Visser},
  title     = {Language Design with the Spoofax Language Workbench},
  journal   = {{IEEE} Softw.},
  volume    = {31},
  number    = {5},
  pages     = {35--43},
  year      = {2014},
  url       = {https://doi.org/10.1109/MS.2014.100},
  doi       = {10.1109/MS.2014.100},
  timestamp = {Mon, 08 Jun 2020 22:32:42 +0200},
  biburl    = {https://dblp.org/rec/journals/software/WachsmuthKV14.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
